{"ast":null,"code":"import _slicedToArray from\"/home/shashikant/Desktop/notezipper-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import{Form,Button,Row,Col}from\"react-bootstrap\";import MainScreen from\"../../components/MainScreen\";import\"./ProfileScreen.css\";import{useDispatch,useSelector}from\"react-redux\";import{updateProfile}from\"../../actions/userActions\";import Loading from\"../../components/Loading\";import ErrorMessage from\"../../components/ErrorMessage\";var ProfileScreen=function ProfileScreen(_ref){var location=_ref.location,history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var dispatch=useDispatch();var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var userUpdate=useSelector(function(state){return state.userUpdate;});var loading=userUpdate.loading,error=userUpdate.error,success=userUpdate.success;useEffect(function(){if(!userInfo){history.push(\"/\");}else{setName(userInfo.name);setEmail(userInfo.email);}},[history,userInfo]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateProfile({name:name,email:email,password:password}));};return/*#__PURE__*/_jsx(MainScreen,{title:\"EDIT PROFILE\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Row,{className:\"profileContainer\",children:/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[loading&&/*#__PURE__*/_jsx(Loading,{}),success&&/*#__PURE__*/_jsx(ErrorMessage,{variant:\"success\",children:\"Updated Successfully\"}),error&&/*#__PURE__*/_jsx(ErrorMessage,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter Password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirm Password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),\" \",/*#__PURE__*/_jsx(Button,{type:\"submit\",varient:\"primary\",children:\"Update\"})]})})})})});};export default ProfileScreen;","map":{"version":3,"sources":["/home/shashikant/Desktop/notezipper-master/frontend/src/screens/ProfileScreen/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Row","Col","MainScreen","useDispatch","useSelector","updateProfile","Loading","ErrorMessage","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","dispatch","userLogin","state","userInfo","userUpdate","loading","error","success","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  \n  \n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n     \n    }\n  }, [history, userInfo]);\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n         \n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}